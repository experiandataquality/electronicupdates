<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration>Release</Configuration>
    <Platform>Any CPU</Platform>
    <SolutionDir Condition="$(SolutionDir) == '' Or $(SolutionDir) == '*Undefined*'">$(MSBuildThisFileDirectory)</SolutionDir>
    <SolutionFile>$(SolutionDir)MetadataWebApi.sln</SolutionFile>
    <OutputPath Condition=" '$(TF_BUILD)' != 'True' ">$(SolutionDir)\BuildOutput</OutputPath>
    <RunTests Condition="'$(RunTests)' == '' and '$(TF_BUILD)' != 'True' ">true</RunTests>
    <BuildProperties Condition=" '$(TF_BUILD)' != 'True' ">Platform=$(Platform);OutputPath=$(OutputPath)</BuildProperties>
    <DotNetExecPrefix Condition="'$(OS)' == 'Unix'">mono </DotNetExecPrefix>
    <CodeTaskFactoryAssembly Condition="'$(MSBuildToolsVersion)' != '14.0'">$(MSBuildToolsPath)\Microsoft.Build.Tasks.v$(MSBuildToolsVersion).dll</CodeTaskFactoryAssembly>
    <CodeTaskFactoryAssembly Condition="'$(MSBuildToolsVersion)' == '14.0'">$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll</CodeTaskFactoryAssembly>
  </PropertyGroup>
  <Target Name="Clean">
    <MSBuild Targets="Clean" Projects="$(SolutionFile)" Properties="Configuration=$(Configuration);$(BuildProperties)" />
  </Target>
  <Target Name="Build" DependsOnTargets="RestorePackages">
    <MSBuild Targets="Build" Projects="$(SolutionFile)" Properties="Configuration=$(Configuration);$(BuildProperties)" />
  </Target>
  <Target Name="Rebuild" DependsOnTargets="RestorePackages">
    <MSBuild Targets="Rebuild" Projects="$(SolutionFile)" Properties="Configuration=$(Configuration);$(BuildProperties)" />
  </Target>
  <Target Name="BeforeBuild" BeforeTargets="Build;Rebuild">
    <CallTarget Targets="UpdateAssemblyConfiguration" Condition="'$(OS)' != 'Unix'" />
  </Target>
  <Target Name="AfterBuild" AfterTargets="Build;Rebuild">
    <CallTarget Targets="Test" Condition="'$(RunTests)' == 'true'" />
    <CallTarget Targets="AuthenticodeSign" Condition=" '$(TF_BUILD)' == 'True' " />
  </Target>
  <Target Name="RestorePackages" Condition="'$(TRAVIS)' == ''">
    <PropertyGroup>
      <NuGetToolsPath>$([System.IO.Path]::Combine($(SolutionDir), "Tools", "NuGet"))</NuGetToolsPath>
      <NuGetExePath>$(NuGetToolsPath)\NuGet.exe</NuGetExePath>
      <RequireRestoreConsent>false</RequireRestoreConsent>
    </PropertyGroup>
    <Message Text="Restoring NuGet packages..." Importance="normal" />
    <Exec Condition="'$(OS)' == 'Unix'" Command="chmod +x %22$(NuGetExePath)%22" />
    <Exec Command="$(DotNetExecPrefix)%22$(NuGetExePath)%22 restore %22$(SolutionFile)%22" LogStandardErrorAsError="true" />
  </Target>
  <Target Name="Test" Condition="'$(OS)' != 'Unix'">
    <ItemGroup Condition="'$(TestTool)' == ''">
      <TestTool Include="$(SolutionDir)packages\xunit.runner.console.*\tools\xunit.console.exe" />
    </ItemGroup>
    <PropertyGroup Condition="'$(TestTool)' == ''">
      <TestTool>@(TestTool)</TestTool>
    </PropertyGroup>
    <ItemGroup>
      <TestContainer Include="$(OutputPath)\MetadataWebApi.*Test*.dll" />
    </ItemGroup>
    <Exec Condition="'$(OS)' == 'Unix'" Command="chmod +x %22$(TestTool)%22" />
    <Exec Command="$(DotNetExecPrefix)%22$(TestTool)%22 @(TestContainer->'%22%(fullpath)%22', ' ')" WorkingDirectory="$(OutputPath)" />
  </Target>
  <Target Name="UpdateAssemblyConfiguration">
    <PropertyGroup Condition="'$(APPVEYOR)' != ''">
      <GitBranch>$(APPVEYOR_REPO_BRANCH)</GitBranch>
      <GitCommit>$(APPVEYOR_REPO_COMMIT)</GitCommit>
    </PropertyGroup>
    <PropertyGroup Condition=" '$(TF_BUILD)' != '' ">
      <GitBranch Condition=" '$(TF_BUILD_SOURCEGETVERSION)' != '' ">$(TF_BUILD_SOURCEGETVERSION.Split(':')[1])</GitBranch>
      <GitCommit Condition=" '$(TF_BUILD_SOURCEGETVERSION)' != '' ">$(TF_BUILD_SOURCEGETVERSION.Split(':')[2])</GitCommit>
    </PropertyGroup>
    <Exec Condition=" '$(TF_BUILD)' != '' and $(GitBranch) == '' " Command="git rev-parse --abbrev-ref HEAD" ConsoleToMSBuild="true" StandardOutputImportance="low">
      <Output TaskParameter="ConsoleOutput" PropertyName="GitBranch" />
    </Exec>
    <Exec Condition=" '$(TF_BUILD)' != '' and $(GitCommit) == '' " Command="git rev-parse HEAD" ConsoleToMSBuild="true" StandardOutputImportance="low">
      <Output TaskParameter="ConsoleOutput" PropertyName="GitCommit" />
    </Exec>
    <PropertyGroup Condition="'$(TRAVIS)' != ''">
      <GitBranch>$(TRAVIS_BRANCH)</GitBranch>
      <GitCommit>$(TRAVIS_COMMIT)</GitCommit>
    </PropertyGroup>
    <UpdateAssemblyConfiguration Condition="$(GitBranch) != '' and $(GitCommit) != ''" AssemblyInfoPath="$(SolutionDir)CommonAssemblyInfo.cs" Branch="$(GitBranch)" CommitId="$(GitCommit)" />
  </Target>
  <Target Name="AuthenticodeSign">
    <PropertyGroup>
      <SignToolCompanyName>Experian Data Quality</SignToolCompanyName>
      <SignToolCompanyUrl>https://www.edq.com/</SignToolCompanyUrl>
      <SignToolDescription></SignToolDescription>
      <SignToolTimestampUrl>http://timestamp.comodoca.com/rfc3161</SignToolTimestampUrl>
      <SignToolPath>$(MSBuildProgramFiles32)\Windows Kits\8.1\Bin\x86\signtool.exe</SignToolPath>
      <ThumbprintSHA1>BC4E31278405D45B5705E631A0BC683F7F983BF2</ThumbprintSHA1>
    </PropertyGroup>
    <Exec Command="%22$(SignToolPath)%22 sign /sha1 $(ThumbprintSHA1) /v /d %22$(SignToolDescription)%22 /du %22$(SignToolCompanyUrl)%22 /fd sha1 /tr %22$(SignToolTimestampUrl)%22 /td sha1 %22$(TF_BUILD_BINARIESDIRECTORY)\MetadataWebApi.exe%22" />
  </Target>
  <UsingTask
    TaskName="UpdateAssemblyConfiguration"
    TaskFactory="CodeTaskFactory"
    AssemblyFile="$(CodeTaskFactoryAssembly)" >
    <ParameterGroup>
      <AssemblyInfoPath Required="true" />
      <CommitId Required="true" />
      <Branch Required="true" />
    </ParameterGroup>
    <Task>
      <Using Namespace="System.IO" />
      <Code Type="Fragment" Language="cs">
        <![CDATA[
          string content = File.ReadAllText(AssemblyInfoPath);
          content = content.Replace("[assembly: AssemblyConfiguration(\"\")]", "[assembly: AssemblyConfiguration(\"" + CommitId + "|" + Branch + "\")]");
          File.WriteAllText(AssemblyInfoPath, content);
        ]]>
      </Code>
    </Task>
  </UsingTask>
</Project>
